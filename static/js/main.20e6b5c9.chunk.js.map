{"version":3,"sources":["Components/itemAddform/itemAddfrom.jsx","Components/TodoList/TodoList-item/TodoList-item.jsx","Components/TodoList/TodoList.jsx","Components/AppHeader/AppHeader.jsx","Components/SearchPanel/SearchPanel-item/SearchPanel-item.jsx","Components/SearchPanel/SearchPanel.jsx","App.js","index.js"],"names":["ItemAddform","state","label","valid","inputOnChange","e","setState","target","value","onSubmit","preventDefault","props","addItem","this","className","action","type","onChange","placeholder","React","Component","TodoListItem","onDeleted","onToggleImportant","onToggleDone","important","style","fontWeight","color","classNames","done","console","log","onClick","TodoList","todos","elements","map","item","id","itemProps","AppHeader","title","todo","SearchPanelItem","buttons","option","filter","onFilterChange","clazz","SearchPanel","term","searchOnChange","App","maxId","todoList","createStateElement","deleteItem","idx","findIndex","el","before","slice","after","newArray","text","newItem","onToggleBoolean","searchToggle","items","length","toLowerCase","indexOf","arr","oldItem","visible","counterDone","todoCount","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20e6b5c9.chunk.js","sourcesContent":["import React, { createRef } from 'react'\r\nimport './itemAddform.css'\r\nexport default class ItemAddform extends React.Component {\r\n    state = {\r\n        label: '',\r\n        valid: false\r\n    }\r\n    inputOnChange = (e) => {\r\n            this.setState({\r\n                label: e.target.value\r\n            })\r\n            if (e.target.value === \"\") {\r\n                this.setState({\r\n                    valid: false\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    valid: true\r\n                })\r\n            }\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addItem(this.state.label)\r\n        this.setState({\r\n            label: \"\"\r\n        })\r\n    }\r\n    render () {\r\n        const notValid = \"form_valid\"\r\n        const valid = \"form_valid\" + \" active\"\r\n        const { addItem } = this.props\r\n        return (\r\n            <div className=\"form\">\r\n            <span className={this.state.valid ? notValid : valid}>Заполните поле</span>\r\n            <form action=\"#\" onSubmit={this.onSubmit}>\r\n            <input value={this.state.label} type=\"text\" onChange={this.inputOnChange} placeholder=\"Новое дело\" className=\"todolist_new\" />\r\n            <button className=\"todolist_new_button\">добавить новое дело</button>\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './TodoList-item.css'\r\n\r\nexport default class TodoListItem extends React.Component {\r\n    render () {\r\n        const { label, onDeleted, onToggleImportant, onToggleDone, important, done } = this.props\r\n        const style = {\r\n            fontWeight: important ? \"bold\" : \"normal\",\r\n            color: important ? \"steelblue\" : \"black\"\r\n        }\r\n\r\n        let classNames = \"todo-list-item\"\r\n        if (done) {\r\n            classNames += \" done\"\r\n        }\r\n        console.log(classNames)\r\n        return (\r\n            <div>\r\n            <div className=\"todo-list\">\r\n                <span onClick={onToggleDone} className={classNames} style={style}>{label}\r\n                </span>\r\n            <div className=\"todo-list-buttons\">\r\n            <button type=\"button\" onClick={onDeleted} className=\"todo-list-button todo-list-button-trash\">\r\n                <i className=\"fa fa-trash-o\" aria-hidden=\"true\"/>\r\n    \r\n                </button>\r\n                <button onClick={onToggleImportant} type=\"button\" className=\"todo-list-button todo-list-button-exclamation\">\r\n                <i className=\"fa fa-exclamation\"/>\r\n                </button>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ItemAddform from '../itemAddform/itemAddfrom';\r\nimport TodoListItem from '../TodoList/TodoList-item/TodoList-item';\r\nimport  \"./TodoList.css\"\r\nexport default class TodoList extends React.Component {\r\n    render () {\r\n        const { todos, onDeleted, onToggleImportant, onToggleDone } = this.props\r\n        const elements = todos.map((item) => {\r\n            const { id , ...itemProps } = item\r\n            return (\r\n                <li key={id} className=\"list-group-item\">\r\n                <TodoListItem {...itemProps} onDeleted={() => onDeleted(id)}\r\n                onToggleImportant={() => onToggleImportant(id) }\r\n                onToggleDone={() => onToggleDone(id) }\r\n                />\r\n                </li> \r\n            )\r\n        })\r\n        return (\r\n            <div className=\"todolist\">\r\n            <ul className=\"list-group todo-list\">\r\n                {elements}\r\n            </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport \"./AppHeader.css\"\r\nexport default class AppHeader extends React.Component {\r\n    render () {\r\n        const { title, todo, done } = this.props\r\n        return (\r\n            <div className=\"app-header\">\r\n                        <h1>{title}</h1>\r\n                        <span className=\"app-more\">{todo} ещё нужно сделать, {done} сделано</span>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './SearchPanel-item.css'\r\nexport default class SearchPanelItem extends React.Component {\r\n        buttons = [\r\n            {option: \"all\", label:\"Все\"},\r\n            {option: \"active\", label:\"Активные\"},\r\n            {option: \"done\", label:\"Выполненные\"}\r\n        ] \r\n    render () {\r\n        const { filter, onFilterChange } = this.props\r\n        const buttons = this.buttons.map(({option, label}) => {\r\n            const isActive = filter === option\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button type=\"button\" onClick={() => onFilterChange(option)} key={option} className={`btn ${clazz}`}>{label}</button>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './SearchPanel.css'\r\nimport SearchPanelItem from './SearchPanel-item/SearchPanel-item';\r\nexport default class SearchPanel extends React.Component {\r\n\r\n    state = {\r\n        term: ''\r\n    }\r\n    searchOnChange = (e) => {\r\n        const term = e.target.value\r\n        this.setState({\r\n            term: term\r\n        })\r\n        this.props.searchOnChange(term)\r\n    }\r\n    render () {\r\n        const { term, filter, onFilterChange } = this.props\r\n        return (\r\n            <div className=\"search-panel\">\r\n            <input className=\"search-panel-input\" value={this.state.term} onChange={this.searchOnChange} type=\"text\" placeholder=\"поиск\"/>\r\n            <SearchPanelItem onFilterChange={onFilterChange} filter={filter}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\nimport TodoList from \"./Components/TodoList/TodoList\";\nimport AppHeader from \"./Components/AppHeader/AppHeader\";\nimport SearchPanel from \"./Components/SearchPanel/SearchPanel\";\nimport './App.css'\nimport ItemAddform from \"./Components/itemAddform/itemAddfrom\";\n\nexport default class App extends React.Component {\n  maxId = 1;\n\n  state = {\n    todoList: [\n      this.createStateElement(\"Выпить коффе\"),\n      this.createStateElement(\"Сделать зарядку\"),\n      this.createStateElement(\"Почитать книжку\"),\n      this.createStateElement(\"Поучить Англ.яз\")\n    ],\n    term: '',\n    filter: 'all'\n}\n  createStateElement (label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    }\n  }\n  deleteItem = (id) => {\n    this.setState(({todoList}) => {\n      const idx = todoList.findIndex((el) => el.id === id)\n      const before = todoList.slice(0, idx)\n      const after = todoList.slice(idx + 1)\n      const newArray = [...before, ...after]\n      console.log(newArray)\n      return {\n        todoList: newArray\n      }\n    })\n  }\n\n\n  addItem = (text) => {\n    const newItem = this.createStateElement(text)\n    if (text != '') {\n      this.setState(({todoList}) => {\n        const newArray = [\n          ...todoList, newItem\n        ]\n        return {\n          todoList: newArray\n        }\n      })\n    } else {\n      console.log(\"Введите вопрос!\")\n    }\n  }\n\n  onToggleBoolean (arr, item, id) {\n    const idx = arr.findIndex((el) => el.id === id)\n    const oldItem = arr[idx]\n    const newItem = {\n      ...oldItem, [item]: !oldItem[item]\n    }\n    return [\n      ...arr.slice(0, idx),\n      newItem,\n      ...arr.slice(idx + 1)\n    ]\n  }\n\n  onToggleImportant = (id) => {\n    this.setState(({ todoList }) => {\n      return {\n        todoList: this.onToggleBoolean(todoList, 'important', id)\n      }\n    })\n  }\n\n\n  onToggleDone = (id) => {\n    this.setState(({ todoList }) => {\n      return {\n        todoList: this.onToggleBoolean(todoList, 'done', id)\n      }\n    })\n  }\n\n  searchToggle = (items, term) => {\n    if (term.length === 0) {\n      return items;\n    }\n   return items.filter((item) => {\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n    })\n  }\n  searchOnChange = (term) => {\n    this.setState({term})\n  }\n  onFilterChange = (filter) => {\n    this.setState({filter})\n  }\n  filter(items, filter) {\n    switch(filter) {\n      case \"all\":\n         return items;\n      case \"active\":\n         return items.filter((item) => !item.done);\n      case \"done\": \n        return items.filter((item) => item.done);\n    }\n  }\n  render () {\n    const { todoList, term, filter } = this.state\n    const visible = this.filter(this.searchToggle(todoList, term), filter)\n    const counterDone = todoList.filter((el) => el.done).length\n    const todoCount = todoList.length - counterDone\n    return (\n        <div className=\"App\">\n          <AppHeader title=\"Список дел\" todo={todoCount} done={counterDone} />\n          <SearchPanel onFilterChange={this.onFilterChange} filter={filter} searchOnChange={this.searchOnChange}/>\n          <TodoList todos={visible}\n          onDeleted={this.deleteItem} onToggleImportant={this.onToggleImportant} onToggleDone={this.onToggleDone} />\n          <ItemAddform  addItem={this.addItem}/>\n        </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}